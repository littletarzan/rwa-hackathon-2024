/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IHTS1410Interface extends ethers.utils.Interface {
  functions: {
    "authorizeOperator(address)": FunctionFragment;
    "authorizeOperatorByPartition(bytes32,address)": FunctionFragment;
    "balanceOfByPartition(bytes32,address)": FunctionFragment;
    "canTransferByPartition(address,address,bytes32,uint256,bytes)": FunctionFragment;
    "isOperator(address,address)": FunctionFragment;
    "isOperatorForPartition(bytes32,address,address)": FunctionFragment;
    "issueByPartition(bytes32,address,uint256,bytes)": FunctionFragment;
    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)": FunctionFragment;
    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)": FunctionFragment;
    "partitionsOf(address)": FunctionFragment;
    "redeemByPartition(bytes32,uint256,bytes)": FunctionFragment;
    "revokeOperator(address)": FunctionFragment;
    "revokeOperatorByPartition(bytes32,address)": FunctionFragment;
    "transferByPartition(bytes32,address,uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "authorizeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "authorizeOperatorByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "canTransferByPartition",
    values: [string, string, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isOperator",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isOperatorForPartition",
    values: [BytesLike, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "issueByPartition",
    values: [BytesLike, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorRedeemByPartition",
    values: [BytesLike, string, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorTransferByPartition",
    values: [BytesLike, string, string, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "partitionsOf",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemByPartition",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeOperatorByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferByPartition",
    values: [BytesLike, string, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "authorizeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "authorizeOperatorByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isOperator", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isOperatorForPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "issueByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorRedeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partitionsOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeOperatorByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferByPartition",
    data: BytesLike
  ): Result;

  events: {
    "AuthorizedOperator(address,address)": EventFragment;
    "AuthorizedOperatorByPartition(bytes32,address,address)": EventFragment;
    "IssuedByPartition(bytes32,address,uint256,bytes)": EventFragment;
    "RedeemedByPartition(bytes32,address,address,uint256,bytes)": EventFragment;
    "RevokedOperator(address,address)": EventFragment;
    "RevokedOperatorByPartition(bytes32,address,address)": EventFragment;
    "TransferByPartition(bytes32,address,address,address,uint256,bytes,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AuthorizedOperator"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AuthorizedOperatorByPartition"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "IssuedByPartition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RedeemedByPartition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevokedOperator"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevokedOperatorByPartition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferByPartition"): EventFragment;
}

export class IHTS1410 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IHTS1410Interface;

  functions: {
    authorizeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  authorizeOperator(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "authorizeOperator(address)"(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  authorizeOperatorByPartition(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "authorizeOperatorByPartition(bytes32,address)"(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOfByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOfByPartition(bytes32,address)"(
    _partition: BytesLike,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  canTransferByPartition(
    _from: string,
    _to: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: string;
  }>;

  "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
    _from: string,
    _to: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: string;
  }>;

  isOperator(
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isOperator(address,address)"(
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isOperatorForPartition(
    _partition: BytesLike,
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isOperatorForPartition(bytes32,address,address)"(
    _partition: BytesLike,
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  issueByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "issueByPartition(bytes32,address,uint256,bytes)"(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  operatorRedeemByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  operatorTransferByPartition(
    _partition: BytesLike,
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
    _partition: BytesLike,
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  partitionsOf(
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "partitionsOf(address)"(
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  redeemByPartition(
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeemByPartition(bytes32,uint256,bytes)"(
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revokeOperator(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeOperator(address)"(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revokeOperatorByPartition(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeOperatorByPartition(bytes32,address)"(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferByPartition(
    _partition: BytesLike,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferByPartition(bytes32,address,uint256,bytes)"(
    _partition: BytesLike,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    authorizeOperator(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeOperator(_operator: string, overrides?: CallOverrides): Promise<void>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    AuthorizedOperator(
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    AuthorizedOperatorByPartition(
      partition: BytesLike | null,
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    IssuedByPartition(
      partition: BytesLike | null,
      to: string | null,
      amount: null,
      data: null
    ): EventFilter;

    RedeemedByPartition(
      partition: BytesLike | null,
      operator: string | null,
      from: string | null,
      amount: null,
      data: null
    ): EventFilter;

    RevokedOperator(
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    RevokedOperatorByPartition(
      partition: BytesLike | null,
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    TransferByPartition(
      _fromPartition: BytesLike | null,
      _operator: null,
      _from: string | null,
      _to: string | null,
      _value: null,
      _data: null,
      _operatorData: null
    ): EventFilter;
  };

  estimateGas: {
    authorizeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    authorizeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
