/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IHTS1594Interface extends ethers.utils.Interface {
  functions: {
    "canTransfer(address,uint256,bytes)": FunctionFragment;
    "canTransferFrom(address,address,uint256,bytes)": FunctionFragment;
    "isIssuable()": FunctionFragment;
    "issue(address,uint256,bytes)": FunctionFragment;
    "redeem(uint256,bytes)": FunctionFragment;
    "redeemFrom(address,uint256,bytes)": FunctionFragment;
    "transferFromWithData(address,address,uint256,bytes)": FunctionFragment;
    "transferWithData(address,uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "canTransfer",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "canTransferFrom",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isIssuable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "issue",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeem",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemFrom",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFromWithData",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferWithData",
    values: [string, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "canTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isIssuable", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "issue", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "redeem", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "redeemFrom", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFromWithData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferWithData",
    data: BytesLike
  ): Result;

  events: {
    "Issued(address,address,uint256,bytes)": EventFragment;
    "Redeemed(address,address,uint256,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Issued"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Redeemed"): EventFragment;
}

export class IHTS1594 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IHTS1594Interface;

  functions: {
    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    isIssuable(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isIssuable()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  canTransfer(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  "canTransfer(address,uint256,bytes)"(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  canTransferFrom(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  "canTransferFrom(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  isIssuable(overrides?: CallOverrides): Promise<boolean>;

  "isIssuable()"(overrides?: CallOverrides): Promise<boolean>;

  issue(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "issue(address,uint256,bytes)"(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  redeem(
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeem(uint256,bytes)"(
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  redeemFrom(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeemFrom(address,uint256,bytes)"(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFromWithData(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFromWithData(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferWithData(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferWithData(address,uint256,bytes)"(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    isIssuable(overrides?: CallOverrides): Promise<boolean>;

    "isIssuable()"(overrides?: CallOverrides): Promise<boolean>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Issued(
      _operator: string | null,
      _to: string | null,
      _value: null,
      _data: null
    ): EventFilter;

    Redeemed(
      _operator: string | null,
      _from: string | null,
      _value: null,
      _data: null
    ): EventFilter;
  };

  estimateGas: {
    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isIssuable(overrides?: CallOverrides): Promise<BigNumber>;

    "isIssuable()"(overrides?: CallOverrides): Promise<BigNumber>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isIssuable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isIssuable()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
