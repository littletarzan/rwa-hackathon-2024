/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IHTS1643Interface extends ethers.utils.Interface {
  functions: {
    "getAllDocuments()": FunctionFragment;
    "getDocument(bytes32)": FunctionFragment;
    "removeDocument(bytes32)": FunctionFragment;
    "setDocument(bytes32,string,bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAllDocuments",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDocument",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeDocument",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setDocument",
    values: [BytesLike, string, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAllDocuments",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDocument",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeDocument",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDocument",
    data: BytesLike
  ): Result;

  events: {
    "DocumentRemoved(bytes32,string,bytes32)": EventFragment;
    "DocumentUpdated(bytes32,string,bytes32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DocumentRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DocumentUpdated"): EventFragment;
}

export class IHTS1643 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IHTS1643Interface;

  functions: {
    getAllDocuments(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getAllDocuments()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    removeDocument(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getAllDocuments(overrides?: CallOverrides): Promise<string[]>;

  "getAllDocuments()"(overrides?: CallOverrides): Promise<string[]>;

  getDocument(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: BigNumber;
  }>;

  "getDocument(bytes32)"(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: BigNumber;
  }>;

  removeDocument(
    _name: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeDocument(bytes32)"(
    _name: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setDocument(
    _name: BytesLike,
    _uri: string,
    _documentHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDocument(bytes32,string,bytes32)"(
    _name: BytesLike,
    _uri: string,
    _documentHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getAllDocuments(overrides?: CallOverrides): Promise<string[]>;

    "getAllDocuments()"(overrides?: CallOverrides): Promise<string[]>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    removeDocument(_name: BytesLike, overrides?: CallOverrides): Promise<void>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    DocumentRemoved(
      name: BytesLike | null,
      uri: null,
      documentHash: null
    ): EventFilter;

    DocumentUpdated(
      name: BytesLike | null,
      uri: null,
      documentHash: null
    ): EventFilter;
  };

  estimateGas: {
    getAllDocuments(overrides?: CallOverrides): Promise<BigNumber>;

    "getAllDocuments()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeDocument(_name: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAllDocuments(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAllDocuments()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeDocument(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
