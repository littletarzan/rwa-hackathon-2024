/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface HTS1400Interface extends ethers.utils.Interface {
  functions: {
    "_validPartitionForReceiver(bytes32,address)": FunctionFragment;
    "allowance(address,address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "authorizeOperator(address)": FunctionFragment;
    "authorizeOperatorByPartition(bytes32,address)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "balanceOfByPartition(bytes32,address)": FunctionFragment;
    "canTransfer(address,uint256,bytes)": FunctionFragment;
    "canTransferByPartition(address,address,bytes32,uint256,bytes)": FunctionFragment;
    "canTransferFrom(address,address,uint256,bytes)": FunctionFragment;
    "controller()": FunctionFragment;
    "controllerRedeem(address,bytes32,uint256,bytes,bytes)": FunctionFragment;
    "controllerTransfer(address,address,bytes32,uint256,bytes,bytes)": FunctionFragment;
    "finalizeControllable()": FunctionFragment;
    "getAllDocuments()": FunctionFragment;
    "getDocument(bytes32)": FunctionFragment;
    "isControllable()": FunctionFragment;
    "isIssuable()": FunctionFragment;
    "isOperator(address,address)": FunctionFragment;
    "isOperatorForPartition(bytes32,address,address)": FunctionFragment;
    "issue(address,uint256,bytes)": FunctionFragment;
    "issueByPartition(bytes32,address,uint256,bytes)": FunctionFragment;
    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)": FunctionFragment;
    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)": FunctionFragment;
    "owner()": FunctionFragment;
    "ownerGrantTokenKyc(address)": FunctionFragment;
    "ownerPauseToken()": FunctionFragment;
    "ownerRevokeTokenKyc(address)": FunctionFragment;
    "ownerUnpauseToken()": FunctionFragment;
    "ownerUpdateTokenKeys(tuple[])": FunctionFragment;
    "partitionsOf(address)": FunctionFragment;
    "redeem(uint256,bytes)": FunctionFragment;
    "redeemByPartition(bytes32,uint256,bytes)": FunctionFragment;
    "redeemFrom(address,uint256,bytes)": FunctionFragment;
    "redirectForToken(address,bytes)": FunctionFragment;
    "removeDocument(bytes32)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "revokeOperator(address)": FunctionFragment;
    "revokeOperatorByPartition(bytes32,address)": FunctionFragment;
    "setDocument(bytes32,string,bytes32)": FunctionFragment;
    "token()": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transfer(address,uint256)": FunctionFragment;
    "transferByPartition(bytes32,address,uint256,bytes)": FunctionFragment;
    "transferFrom(address,address,address,uint256)": FunctionFragment;
    "transferFromWithData(address,address,uint256,bytes)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "transferWithData(address,uint256,bytes)": FunctionFragment;
    "withdrawHbar(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_validPartitionForReceiver",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "authorizeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "authorizeOperatorByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "balanceOfByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "canTransfer",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "canTransferByPartition",
    values: [string, string, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "canTransferFrom",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "controller",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "controllerRedeem",
    values: [string, BytesLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "controllerTransfer",
    values: [string, string, BytesLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeControllable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllDocuments",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDocument",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isControllable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isIssuable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isOperator",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isOperatorForPartition",
    values: [BytesLike, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "issue",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "issueByPartition",
    values: [BytesLike, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorRedeemByPartition",
    values: [BytesLike, string, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorTransferByPartition",
    values: [BytesLike, string, string, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerGrantTokenKyc",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerPauseToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ownerRevokeTokenKyc",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerUnpauseToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ownerUpdateTokenKeys",
    values: [
      {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "partitionsOf",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "redeem",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemByPartition",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemFrom",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redirectForToken",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeDocument",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revokeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeOperatorByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setDocument",
    values: [BytesLike, string, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "token", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferByPartition",
    values: [BytesLike, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFromWithData",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferWithData",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawHbar",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "_validPartitionForReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "authorizeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "authorizeOperatorByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "controller", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "controllerRedeem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "controllerTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeControllable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllDocuments",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDocument",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isControllable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isIssuable", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isOperator", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isOperatorForPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "issue", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "issueByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorRedeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ownerGrantTokenKyc",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerPauseToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerRevokeTokenKyc",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerUnpauseToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerUpdateTokenKeys",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partitionsOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "redeem", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "redeemFrom", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redirectForToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeDocument",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeOperatorByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDocument",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "token", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFromWithData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferWithData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawHbar",
    data: BytesLike
  ): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "AuthorizedOperator(address,address)": EventFragment;
    "AuthorizedOperatorByPartition(bytes32,address,address)": EventFragment;
    "CallResponseEvent(bool,bytes)": EventFragment;
    "ControllerRedemption(address,address,uint256,bytes,bytes)": EventFragment;
    "ControllerTransfer(address,address,address,bytes32,uint256,bytes,bytes)": EventFragment;
    "DocumentRemoved(bytes32,string,bytes32)": EventFragment;
    "DocumentUpdated(bytes32,string,bytes32)": EventFragment;
    "FinalizedControllerFeature()": EventFragment;
    "Issued(address,address,uint256,bytes)": EventFragment;
    "IssuedByPartition(bytes32,address,uint256,bytes)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Redeemed(address,address,uint256,bytes)": EventFragment;
    "RedeemedByPartition(bytes32,address,address,uint256,bytes)": EventFragment;
    "RevokedOperator(address,address)": EventFragment;
    "RevokedOperatorByPartition(bytes32,address,address)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
    "TransferByPartition(bytes32,address,address,address,uint256,bytes,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AuthorizedOperator"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AuthorizedOperatorByPartition"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CallResponseEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ControllerRedemption"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ControllerTransfer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DocumentRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DocumentUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FinalizedControllerFeature"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Issued"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "IssuedByPartition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Redeemed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RedeemedByPartition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevokedOperator"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevokedOperatorByPartition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferByPartition"): EventFragment;
}

export class HTS1400 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: HTS1400Interface;

  functions: {
    _validPartitionForReceiver(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "_validPartitionForReceiver(bytes32,address)"(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    authorizeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    controller(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "controller()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    controllerRedeem(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "controllerRedeem(address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    controllerTransfer(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "controllerTransfer(address,address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    finalizeControllable(overrides?: Overrides): Promise<ContractTransaction>;

    "finalizeControllable()"(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getAllDocuments(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getAllDocuments()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    isControllable(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isControllable()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    isIssuable(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isIssuable()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    ownerGrantTokenKyc(
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ownerGrantTokenKyc(address)"(
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ownerPauseToken(overrides?: Overrides): Promise<ContractTransaction>;

    "ownerPauseToken()"(overrides?: Overrides): Promise<ContractTransaction>;

    ownerRevokeTokenKyc(
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ownerRevokeTokenKyc(address)"(
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ownerUnpauseToken(overrides?: Overrides): Promise<ContractTransaction>;

    "ownerUnpauseToken()"(overrides?: Overrides): Promise<ContractTransaction>;

    ownerUpdateTokenKeys(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ownerUpdateTokenKeys(tuple[])"(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    redirectForToken(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redirectForToken(address,bytes)"(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeDocument(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    token(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "token()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    totalSupply(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "totalSupply()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,address,uint256)"(
      token: string,
      from: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawHbar(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawHbar(uint256)"(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  _validPartitionForReceiver(
    _partition: BytesLike,
    _to: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "_validPartitionForReceiver(bytes32,address)"(
    _partition: BytesLike,
    _to: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  allowance(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allowance(address,address)"(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  approve(
    _spender: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    _spender: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  authorizeOperator(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "authorizeOperator(address)"(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  authorizeOperatorByPartition(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "authorizeOperatorByPartition(bytes32,address)"(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOf(address)"(
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  balanceOfByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOfByPartition(bytes32,address)"(
    _partition: BytesLike,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  canTransfer(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  "canTransfer(address,uint256,bytes)"(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  canTransferByPartition(
    _from: string,
    _to: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: string;
  }>;

  "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
    _from: string,
    _to: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: string;
  }>;

  canTransferFrom(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  "canTransferFrom(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: boolean;
    1: string;
    2: string;
  }>;

  controller(overrides?: CallOverrides): Promise<string>;

  "controller()"(overrides?: CallOverrides): Promise<string>;

  controllerRedeem(
    _from: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "controllerRedeem(address,bytes32,uint256,bytes,bytes)"(
    _from: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  controllerTransfer(
    _from: string,
    _to: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "controllerTransfer(address,address,bytes32,uint256,bytes,bytes)"(
    _from: string,
    _to: string,
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  finalizeControllable(overrides?: Overrides): Promise<ContractTransaction>;

  "finalizeControllable()"(overrides?: Overrides): Promise<ContractTransaction>;

  getAllDocuments(overrides?: CallOverrides): Promise<string[]>;

  "getAllDocuments()"(overrides?: CallOverrides): Promise<string[]>;

  getDocument(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: BigNumber;
  }>;

  "getDocument(bytes32)"(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: BigNumber;
  }>;

  isControllable(overrides?: CallOverrides): Promise<boolean>;

  "isControllable()"(overrides?: CallOverrides): Promise<boolean>;

  isIssuable(overrides?: CallOverrides): Promise<boolean>;

  "isIssuable()"(overrides?: CallOverrides): Promise<boolean>;

  isOperator(
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isOperator(address,address)"(
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isOperatorForPartition(
    _partition: BytesLike,
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isOperatorForPartition(bytes32,address,address)"(
    _partition: BytesLike,
    _operator: string,
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  issue(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "issue(address,uint256,bytes)"(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  issueByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "issueByPartition(bytes32,address,uint256,bytes)"(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  operatorRedeemByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
    _partition: BytesLike,
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  operatorTransferByPartition(
    _partition: BytesLike,
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
    _partition: BytesLike,
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    _operatorData: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  ownerGrantTokenKyc(
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ownerGrantTokenKyc(address)"(
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ownerPauseToken(overrides?: Overrides): Promise<ContractTransaction>;

  "ownerPauseToken()"(overrides?: Overrides): Promise<ContractTransaction>;

  ownerRevokeTokenKyc(
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ownerRevokeTokenKyc(address)"(
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ownerUnpauseToken(overrides?: Overrides): Promise<ContractTransaction>;

  "ownerUnpauseToken()"(overrides?: Overrides): Promise<ContractTransaction>;

  ownerUpdateTokenKeys(
    keys: {
      keyType: BigNumberish;
      key: {
        inheritAccountKey: boolean;
        contractId: string;
        ed25519: BytesLike;
        ECDSA_secp256k1: BytesLike;
        delegatableContractId: string;
      };
    }[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ownerUpdateTokenKeys(tuple[])"(
    keys: {
      keyType: BigNumberish;
      key: {
        inheritAccountKey: boolean;
        contractId: string;
        ed25519: BytesLike;
        ECDSA_secp256k1: BytesLike;
        delegatableContractId: string;
      };
    }[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  partitionsOf(
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "partitionsOf(address)"(
    _tokenHolder: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  redeem(
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeem(uint256,bytes)"(
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  redeemByPartition(
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeemByPartition(bytes32,uint256,bytes)"(
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  redeemFrom(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeemFrom(address,uint256,bytes)"(
    _tokenHolder: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  redirectForToken(
    token: string,
    encodedFunctionSelector: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redirectForToken(address,bytes)"(
    token: string,
    encodedFunctionSelector: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeDocument(
    _name: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeDocument(bytes32)"(
    _name: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  revokeOperator(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeOperator(address)"(
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revokeOperatorByPartition(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeOperatorByPartition(bytes32,address)"(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setDocument(
    _name: BytesLike,
    _uri: string,
    _documentHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDocument(bytes32,string,bytes32)"(
    _name: BytesLike,
    _uri: string,
    _documentHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  token(overrides?: CallOverrides): Promise<string>;

  "token()"(overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,uint256)"(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferByPartition(
    _partition: BytesLike,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferByPartition(bytes32,address,uint256,bytes)"(
    _partition: BytesLike,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,address,uint256)"(
    token: string,
    from: string,
    to: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFromWithData(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFromWithData(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferWithData(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferWithData(address,uint256,bytes)"(
    _to: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdrawHbar(
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawHbar(uint256)"(
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    _validPartitionForReceiver(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "_validPartitionForReceiver(bytes32,address)"(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    authorizeOperator(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
    }>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
      1: string;
      2: string;
    }>;

    controller(overrides?: CallOverrides): Promise<string>;

    "controller()"(overrides?: CallOverrides): Promise<string>;

    controllerRedeem(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "controllerRedeem(address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    controllerTransfer(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "controllerTransfer(address,address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    finalizeControllable(overrides?: CallOverrides): Promise<void>;

    "finalizeControllable()"(overrides?: CallOverrides): Promise<void>;

    getAllDocuments(overrides?: CallOverrides): Promise<string[]>;

    "getAllDocuments()"(overrides?: CallOverrides): Promise<string[]>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: BigNumber;
    }>;

    isControllable(overrides?: CallOverrides): Promise<boolean>;

    "isControllable()"(overrides?: CallOverrides): Promise<boolean>;

    isIssuable(overrides?: CallOverrides): Promise<boolean>;

    "isIssuable()"(overrides?: CallOverrides): Promise<boolean>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    ownerGrantTokenKyc(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerGrantTokenKyc(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerPauseToken(overrides?: CallOverrides): Promise<BigNumber>;

    "ownerPauseToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerRevokeTokenKyc(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerRevokeTokenKyc(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerUnpauseToken(overrides?: CallOverrides): Promise<BigNumber>;

    "ownerUnpauseToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerUpdateTokenKeys(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerUpdateTokenKeys(tuple[])"(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    redirectForToken(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      responseCode: BigNumber;
      response: string;
      0: BigNumber;
      1: string;
    }>;

    "redirectForToken(address,bytes)"(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      responseCode: BigNumber;
      response: string;
      0: BigNumber;
      1: string;
    }>;

    removeDocument(_name: BytesLike, overrides?: CallOverrides): Promise<void>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    revokeOperator(_operator: string, overrides?: CallOverrides): Promise<void>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    token(overrides?: CallOverrides): Promise<string>;

    "token()"(overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "transferFrom(address,address,address,uint256)"(
      token: string,
      from: string,
      to: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawHbar(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawHbar(uint256)"(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Approval(
      owner: string | null,
      spender: string | null,
      value: null
    ): EventFilter;

    AuthorizedOperator(
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    AuthorizedOperatorByPartition(
      partition: BytesLike | null,
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    CallResponseEvent(undefined: null, undefined: null): EventFilter;

    ControllerRedemption(
      _controller: null,
      _tokenHolder: string | null,
      _value: null,
      _data: null,
      _operatorData: null
    ): EventFilter;

    ControllerTransfer(
      _controller: null,
      _from: string | null,
      _to: string | null,
      _partition: null,
      _value: null,
      _data: null,
      _operatorData: null
    ): EventFilter;

    DocumentRemoved(
      name: BytesLike | null,
      uri: null,
      documentHash: null
    ): EventFilter;

    DocumentUpdated(
      name: BytesLike | null,
      uri: null,
      documentHash: null
    ): EventFilter;

    FinalizedControllerFeature(): EventFilter;

    Issued(
      _operator: string | null,
      _to: string | null,
      _value: null,
      _data: null
    ): EventFilter;

    IssuedByPartition(
      partition: BytesLike | null,
      to: string | null,
      amount: null,
      data: null
    ): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    Redeemed(
      _operator: string | null,
      _from: string | null,
      _value: null,
      _data: null
    ): EventFilter;

    RedeemedByPartition(
      partition: BytesLike | null,
      operator: string | null,
      from: string | null,
      amount: null,
      data: null
    ): EventFilter;

    RevokedOperator(
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    RevokedOperatorByPartition(
      partition: BytesLike | null,
      operator: string | null,
      tokenHolder: string | null
    ): EventFilter;

    Transfer(from: string | null, to: string | null, value: null): EventFilter;

    TransferByPartition(
      _fromPartition: BytesLike | null,
      _operator: null,
      _from: string | null,
      _to: string | null,
      _value: null,
      _data: null,
      _operatorData: null
    ): EventFilter;
  };

  estimateGas: {
    _validPartitionForReceiver(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_validPartitionForReceiver(bytes32,address)"(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    authorizeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    controller(overrides?: CallOverrides): Promise<BigNumber>;

    "controller()"(overrides?: CallOverrides): Promise<BigNumber>;

    controllerRedeem(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "controllerRedeem(address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    controllerTransfer(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "controllerTransfer(address,address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    finalizeControllable(overrides?: Overrides): Promise<BigNumber>;

    "finalizeControllable()"(overrides?: Overrides): Promise<BigNumber>;

    getAllDocuments(overrides?: CallOverrides): Promise<BigNumber>;

    "getAllDocuments()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isControllable(overrides?: CallOverrides): Promise<BigNumber>;

    "isControllable()"(overrides?: CallOverrides): Promise<BigNumber>;

    isIssuable(overrides?: CallOverrides): Promise<BigNumber>;

    "isIssuable()"(overrides?: CallOverrides): Promise<BigNumber>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerGrantTokenKyc(
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ownerGrantTokenKyc(address)"(
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ownerPauseToken(overrides?: Overrides): Promise<BigNumber>;

    "ownerPauseToken()"(overrides?: Overrides): Promise<BigNumber>;

    ownerRevokeTokenKyc(
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ownerRevokeTokenKyc(address)"(
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ownerUnpauseToken(overrides?: Overrides): Promise<BigNumber>;

    "ownerUnpauseToken()"(overrides?: Overrides): Promise<BigNumber>;

    ownerUpdateTokenKeys(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ownerUpdateTokenKeys(tuple[])"(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    redirectForToken(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redirectForToken(address,bytes)"(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeDocument(_name: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    token(overrides?: CallOverrides): Promise<BigNumber>;

    "token()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,address,uint256)"(
      token: string,
      from: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdrawHbar(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawHbar(uint256)"(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _validPartitionForReceiver(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_validPartitionForReceiver(bytes32,address)"(
      _partition: BytesLike,
      _to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    authorizeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "authorizeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "authorizeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balanceOfByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOfByPartition(bytes32,address)"(
      _partition: BytesLike,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canTransfer(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransfer(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canTransferByPartition(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransferByPartition(address,address,bytes32,uint256,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canTransferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    controller(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "controller()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    controllerRedeem(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "controllerRedeem(address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    controllerTransfer(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "controllerTransfer(address,address,bytes32,uint256,bytes,bytes)"(
      _from: string,
      _to: string,
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    finalizeControllable(overrides?: Overrides): Promise<PopulatedTransaction>;

    "finalizeControllable()"(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getAllDocuments(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAllDocuments()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDocument(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDocument(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isControllable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isControllable()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isIssuable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isIssuable()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isOperator(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isOperator(address,address)"(
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOperatorForPartition(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isOperatorForPartition(bytes32,address,address)"(
      _partition: BytesLike,
      _operator: string,
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    issue(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "issue(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    issueByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "issueByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    operatorRedeemByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    operatorTransferByPartition(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)"(
      _partition: BytesLike,
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      _operatorData: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerGrantTokenKyc(
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ownerGrantTokenKyc(address)"(
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ownerPauseToken(overrides?: Overrides): Promise<PopulatedTransaction>;

    "ownerPauseToken()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    ownerRevokeTokenKyc(
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ownerRevokeTokenKyc(address)"(
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ownerUnpauseToken(overrides?: Overrides): Promise<PopulatedTransaction>;

    "ownerUnpauseToken()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    ownerUpdateTokenKeys(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ownerUpdateTokenKeys(tuple[])"(
      keys: {
        keyType: BigNumberish;
        key: {
          inheritAccountKey: boolean;
          contractId: string;
          ed25519: BytesLike;
          ECDSA_secp256k1: BytesLike;
          delegatableContractId: string;
        };
      }[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    partitionsOf(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "partitionsOf(address)"(
      _tokenHolder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeem(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeem(uint256,bytes)"(
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeemByPartition(bytes32,uint256,bytes)"(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    redeemFrom(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeemFrom(address,uint256,bytes)"(
      _tokenHolder: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    redirectForToken(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redirectForToken(address,bytes)"(
      token: string,
      encodedFunctionSelector: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeDocument(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeDocument(bytes32)"(
      _name: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeOperator(address)"(
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeOperatorByPartition(bytes32,address)"(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setDocument(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDocument(bytes32,string,bytes32)"(
      _name: BytesLike,
      _uri: string,
      _documentHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    token(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "token()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferByPartition(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferByPartition(bytes32,address,uint256,bytes)"(
      _partition: BytesLike,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,address,uint256)"(
      token: string,
      from: string,
      to: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFromWithData(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFromWithData(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferWithData(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferWithData(address,uint256,bytes)"(
      _to: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawHbar(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawHbar(uint256)"(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
